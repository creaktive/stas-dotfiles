#!/usr/bin/env perl
use 5.024;
use experimental qw(signatures);
use warnings qw(all);
no warnings qw(experimental::signatures);

use HTTP::Tiny ();
use List::Util qw(sum);
use Scalar::Util qw(looks_like_number);
use Term::ANSIColor qw(:constants);
use Time::Piece;

sub fetch_calendar($login) {
    my $url = "https://github.com/users/$login/contributions";
    my $response = HTTP::Tiny->new(verify_SSL => 1)->get($url);
    die $response->{reason} unless $response->{success};

    my $parser = qr{
        (?(DEFINE) (?<tag> [^>]*))
        <td (?&tag)
            \b data-date="(?<date> \d{4}-\d{2}-\d{2})" (?&tag)
            \b class="ContributionCalendar-day" (?&tag)
        >
        \s*
        </td>
        \s*
        <tool-tip (?&tag)>(?<count> \w+)
    }x;

    my @calendar;
    push @calendar => [
        $+{date},
        looks_like_number($+{count}) ? 0 + $+{count} : 0
    ] while $response->{content} =~ m{$parser}gosx;
    @calendar = sort { $a->[0] cmp $b->[0] } @calendar;

    return \@calendar;
}

sub main($login) {
    my $calendar = fetch_calendar($login || 'creaktive');
    my $start = localtime->truncate(to => 'month')->ymd;

    my @month =
        map { $_->[1] }
        grep { $_->[0] ge $start }
        @$calendar;

    my $streak = 0;
    for my $day (reverse @$calendar) {
        last unless $day->[1];
        $streak++;
    }

    say "@{[ BOLD . sum(@month) . RESET ]} this month";
    say "@{[ BOLD .  $month[-1] . RESET ]} today";
    say "@{[ BOLD .     $streak . RESET ]} days streak";

    return 0;
}

exit main($ARGV[0]);
