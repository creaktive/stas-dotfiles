set-option -g default-command "reattach-to-user-namespace -l zsh"

setw -g xterm-keys on
setw -g mode-mouse on
setw -g mode-keys vi
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
set -g set-titles on
set -g history-limit 20480
set -g escape-time 100

set -g prefix C-a
bind-key C-a last-window
bind-key / copy-mode

unbind %
bind c      new-window -c "#{pane_current_path}"
bind '"'    split-window -v -c "#{pane_current_path}"
bind |      if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys :vnew\n" "split-window -h -c \"#{pane_current_path}\""
bind -      if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys :new\n"  "split-window -v -c \"#{pane_current_path}\""
bind \;     if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-\\"    "last-pane"
bind h      if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h"     "select-pane -L"
bind j      if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j"     "select-pane -D"
bind k      if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k"     "select-pane -U"
bind l      if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l"     "select-pane -R"
bind Left   if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h"     "select-pane -L"
bind Down   if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j"     "select-pane -D"
bind Up     if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k"     "select-pane -U"
bind Right  if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l"     "select-pane -R"

# copy/paste stuff
bind ` copy-mode
unbind n
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection

# after copying to a tmux buffer, hit y again to copy to clipboard
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# Set status bar
set-option -g status on
set-option -g status-interval 10
set-option -g status-utf8 on
#set-option -g status-justify "centre"
set-option -g status-left-length 64
set-option -g status-right-length 128
#set-option -g status-left "#(~/tmux-powerline/powerline.sh left)"
set-option -g status-left "#(`setproxy` && ~/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/tmux-powerline/powerline.sh right)"
set-option -g status-right "#(`setproxy` && ~/tmux-powerline/powerline.sh right)"
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

# Highlight active window
set-window-option -g window-status-current-bg red

# Automatically set window title
setw -g automatic-rename on

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

bind -n M-Left previous-window
bind -n M-Right next-window

# https://github.com/seebi/tmux-colors-solarized
#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
#set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
#set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green
